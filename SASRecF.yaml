# model config
#embedding_size: 64
#hidden_size: 128
#num_layers: 1
selected_features: [category, price]
#loss_type: BPR
temperature: 0.07
# dataset config
data_path: 'data/'
field_separator: "\t" #指定数据集field的分隔符
seq_separator: " " #指定数据集中token_seq或者float_seq域里的分隔符
USER_ID_FIELD: user_id #指定用户id域
ITEM_ID_FIELD: item_id #指定物品id域
TIME_FIELD: timestamp #指定时间域
NEG_PREFIX: neg_ #指定负采样前缀
ITEM_LIST_LENGTH_FIELD: item_length #指定序列长度域
LIST_SUFFIX: _list #指定序列前缀
checkpoint_dir: SASRecF_saved
MAX_ITEM_LIST_LENGTH: 100 #指定最大序列长度
POSITION_FIELD: position_id #指定生成的序列位置id
#指定从什么文件里读什么列，这里就是从ml-1m.inter里面读取user_id, item_id, rating, timestamp这四列,剩下的以此类推
load_col:
    inter: [user_id, item_id, timestamp]
    item: [item_id, category, price]
    user: [user_id, age_group]
numerical_features: [price]
# training settings
epochs: 500 #训练的最大轮数
train_batch_size: 4096 #训练的batch_size
eval_batch_size: 1024
learner: adam #使用的pytorch内置优化器
learning_rate: 0.0005 #学习率
train_neg_sample_args: ~ #负采样数目
eval_step: 1 #每次训练后做evalaution的次数
stopping_step: 10 #控制训练收敛的步骤数，在该步骤数内若选取的评测标准没有什么变化，就可以提前停止了
# evalution settings
eval_args:                      # (dict) 4 keys: group_by, order, split, and mode
  split: {'LS':'valid_only'}   # (dict) The splitting strategy ranging in ['RS','LS'].
  group_by: user                # (str) The grouping strategy ranging in ['user', 'none'].
  order: TO                     # (str) The ordering strategy ranging in ['RO', 'TO'].
  mode: full
metrics: ["Recall", "MRR","NDCG","Hit","Precision"] #评测标准
topk: [50]
valid_metric: NDCG@50 #选取哪个评测标准作为作为提前停止训练的标准
